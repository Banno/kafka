apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'docker'

version = '0.9.1.4'

jar.archiveName = "kafka-mesos-${version}.jar"

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

repositories {
    mavenCentral()
}

buildDir = 'out/gradle'
libsDirName = '../../'

sourceSets {
    main {
        scala { srcDirs = ['src/scala'] }
    }
    test {
        scala { srcDirs = ['src/test'] }
    }
}

dependencies {
    compile "org.scala-lang:scala-library:2.10.3"
    compile "org.apache.mesos:mesos:0.21.1"
    compile "com.google.protobuf:protobuf-java:2.5.0"
    compile "log4j:log4j:1.2.16"
    compile "net.sf.jopt-simple:jopt-simple:4.8"
    compile "org.eclipse.jetty:jetty-http:9.0.4.v20130625"
    compile "org.eclipse.jetty:jetty-io:9.0.4.v20130625"
    compile "org.eclipse.jetty:jetty-security:9.0.4.v20130625"
    compile "org.eclipse.jetty:jetty-server:9.0.4.v20130625"
    compile "org.eclipse.jetty:jetty-servlet:9.0.4.v20130625"
    compile "org.eclipse.jetty:jetty-util:9.0.4.v20130625"
    compile "javax.servlet:javax.servlet-api:3.0.1"
    testCompile 'junit:junit:4.12'

    compile ('org.apache.kafka:kafka_2.10:0.8.1.1') {
        exclude group: "javax.jms"
        exclude group: "com.sun.jdmk"
        exclude group: "com.sun.jmx"
        exclude group: "junit"
        exclude group: "jline"
    }
}

jar {
    dependsOn 'test'
    doFirst {
        from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude "*"
            exclude "about_files/*"
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }
    }
    manifest.attributes("Main-Class": "ly.stealth.mesos.kafka.Cli")
}

group = System.properties['user.name']

docker {
    baseImage "ubuntu:14.04"
    maintainer ""
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = "kafka-mesos"

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
    doFirst {
        copy {
            from "kafka-mesos.sh"
            into stageDir
        }
    }

    doFirst {
        copy {
            from "kafka-graphite*.jar"
            into stageDir
        }
    }

    doFirst {
        copy {
            from "metrics-graphite*.jar"
            into stageDir
        }
    }

    workingDir("/opt/kafka-mesos")
    setEnvironment("KAFKA_VERSION", "0.8.2.1")
    setEnvironment("SCALA_VERSION", "2.10")

    runCommand("apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E56151BF && echo deb http://repos.mesosphere.io/ubuntu trusty main > /etc/apt/sources.list.d/mesosphere.list")
    runCommand("apt-get update && apt-get install -qy git vim zip mc wget curl openjdk-7-jdk mesos libc6")

    runCommand("wget -nc -P /opt/kafka-mesos/ https://archive.apache.org/dist/kafka/\"\$KAFKA_VERSION\"/kafka_\"\$SCALA_VERSION\"-\"\$KAFKA_VERSION\".tgz")
    runCommand("tar xvf kafka_2.10-0.8.2.1.tgz")
    addFile("kafka-graphite-1.1.6.jar", "/opt/kafka-mesos/kafka_2.10-0.8.2.1/libs/")
    addFile("metrics-graphite-2.2.0.jar", "/opt/kafka-mesos/kafka_2.10-0.8.2.1/libs/")
    runCommand("rm kafka_2.10-0.8.2.1.tgz")
    runCommand("tar -cvzf kafka_2.10-0.8.2.1.tgz kafka_2.10-0.8.2.1")

    addFile("*${version}.jar", "/opt/kafka-mesos/")
    addFile("*.sh", "/opt/kafka-mesos/")
    exposePort(7000)
}
